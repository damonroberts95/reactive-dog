{"version":3,"sources":["components/Dog.js","fuzzySearch.js","components/DogSelect.js","components/RandomDog.js","App.js","index.js"],"names":["Dog","props","useState","dogImgSrc","setDogImgSrc","useEffect","dogImgRequestUrl","breed","fetch","then","response","json","message","className","src","alt","type","onClick","deleteDog","fuzzySearch","options","fuse","Fuse","keys","threshold","value","length","search","DogSelect","newDog","setNewDog","onSubmit","e","preventDefault","masterDogList","includes","dogs","map","a","alert","addDog","htmlFor","SelectSearch","id","dogOptions","filterOptions","onChange","placeholder","emptyMessage","RandomDog","aria-pressed","filteredDogs","arrayFilterByArray","randomDog","Math","floor","random","console","log","App","setMasterDogList","setDogOptions","setDogs","dogNoun","headingText","sparedDogs","filter","dog","input","criteria","f","this","indexOf","Object","arr","i","push","charAt","toUpperCase","slice","dogList","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44429a4f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Dog(props) {\r\n    var [dogImgSrc, setDogImgSrc] = useState();\r\n\r\n    useEffect(() => {\r\n        // GET request using fetch inside useEffect React hook. Gets dog pics using the prop breed.\r\n        var dogImgRequestUrl = 'https://dog.ceo/api/breed/' + props.breed + '/images/random';\r\n        fetch(dogImgRequestUrl)\r\n            .then(response => { return response.json() })\r\n            .then(response => {\r\n                setDogImgSrc(response.message)\r\n                return\r\n            });\r\n    }, [props.breed]); //runs again when breed is updated or changed (which will be never for existing dogs).\r\n    \r\n    return (\r\n        <li className=\"dog-list stack-small\">\r\n            <div className=\"dog-title\">\r\n                {props.breed}\r\n            </div>\r\n            <div>\r\n                <img className=\"dog-image\" src={dogImgSrc} alt={props.breed} />\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn__danger\"\r\n                    onClick={() => props.deleteDog(props.breed)}\r\n                >\r\n                    Delete {props.breed}\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n}","import Fuse from 'fuse.js';\r\n\r\nexport default function fuzzySearch(options) {\r\n    const fuse = new Fuse(options, {\r\n        keys: ['name', 'groupName'],\r\n        threshold: 0.3,\r\n    });\r\n\r\n    return (value) => {\r\n        if (!value.length) {\r\n            return options;\r\n        }\r\n\r\n        return fuse.search(value);\r\n    };\r\n}","import React, { useState } from 'react';\r\nimport SelectSearch from 'react-select-search';\r\nimport fuzzySearch  from '../fuzzySearch.js';\r\n\r\n/* Passed in:\r\n        masterDogList={masterDogList}\r\n        dogOptions={dogOptions}\r\n        addDog={addDog}\r\n        dogs={dogs} />*/\r\n\r\nfunction DogSelect(props) {\r\n\r\n  var [newDog, setNewDog] = useState('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();    \r\n    if (!props.masterDogList.includes(newDog)) {\r\n      alert(\"Paw0Paw error: Dog not found!\");\r\n      return;\r\n    }\r\n    else if ((props.dogs.map(a => a.breed)).includes(newDog)) {\r\n      alert(\"Paw0Paw error: Dog already found!\");\r\n      setNewDog(\"\");\r\n      return;\r\n    }\r\n    else {\r\n    props.addDog(newDog);\r\n    setNewDog(\"\");\r\n    return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          Dog\r\n            <br /><br />\r\n            A domesticated carnivorous mammal that typically has a long snout, an acute sense of smell, non-retractable claws, and a barking, howling, or whining voice.\r\n            <br /><br />\r\n            Search for and pick your favourites below. {newDog}\r\n          </label>\r\n      </h2>\r\n      <SelectSearch\r\n        id=\"dogsearch\"\r\n        options={props.dogOptions}\r\n        search\r\n        filterOptions={fuzzySearch}\r\n        value={newDog}\r\n        className=\"input__lg capitalize\"\r\n        onChange={setNewDog}\r\n        placeholder=\"Choose a dog\"\r\n        emptyMessage=\"Not found\"\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add dog\r\n        </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DogSelect;","import React from \"react\";\r\n\r\n/* Passed in:\r\n        dogs={dogs} \r\n        masterDogList={masterDogList} \r\n        addDog={addDog}*/\r\n\r\nfunction RandomDog(props) {\r\n\r\n    function handleRandomSubmit(e) {\r\n        e.preventDefault(); \r\n        let filteredDogs = props.arrayFilterByArray(props.masterDogList, props.dogs)\r\n        if(filteredDogs.length === 0)\r\n        {\r\n            alert('Gotta catch \\'em all! Your pack full!')\r\n            return;\r\n        }\r\n        let randomDog = filteredDogs[Math.floor(Math.random() * filteredDogs.length)];\r\n        console.log(randomDog);\r\n        props.addDog(randomDog)\r\n    }\r\n\r\n    return (\r\n        <div className=\"random-dog\">\r\n            <button type=\"button\"\r\n                className=\"btn btn__primary btn__lg\"\r\n                aria-pressed=\"true\"\r\n                onClick={handleRandomSubmit}>\r\n                <span className=\"visually-hidden\">Show </span>\r\n                <span>Add a random breed</span>\r\n                <span className=\"visually-hidden\"> tasks</span>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RandomDog;","import Dog from \"./components/Dog\";\nimport DogSelect from \"./components/DogSelect\";\nimport RandomDog from \"./components/RandomDog\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App(props) {  \n\n  const [masterDogList, setMasterDogList] = useState();\n  const [dogOptions, setDogOptions] = useState([{ 'name': '', 'value': '' }]);\n  const [dogs, setDogs] = useState(props.dogs);\n\n  const dogNoun = dogs.length !== 1 ? 'dogs' : 'dog';\n  const headingText = `${dogs.length} ${dogNoun} in your pack`;\n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook. Gets dog pics using the prop breed.\n    var masterDogListURL = 'https://dog.ceo/api/breeds/list/all';\n    fetch(masterDogListURL)\n      .then(response => { return response.json() })\n      .then(response => {\n        setMasterDogList(Object.keys(response.message))\n        return\n      })\n  }, []); //runs again when breed is updated or changed (which will be never for existing dogs).\n\n  useEffect(() => {\n    if (typeof masterDogList !== 'undefined') {\n      var arr = [];\n      let filteredDogs = arrayFilterByArray(masterDogList, dogs)\n      for (var i = 0; i < filteredDogs.length; i++) {\n        arr.push({ 'name': filteredDogs[i].charAt(0).toUpperCase() + filteredDogs[i].slice(1), 'value': filteredDogs[i] });\n      }\n      setDogOptions(arr);\n    }\n  }, [masterDogList, dogs])\n\n  function deleteDog(breed) {\n    const sparedDogs = dogs.filter(dog => breed !== dog.breed);\n    setDogs(sparedDogs);\n  }\n\n  function addDog(breed) {\n    const newDog = { breed: breed };\n    setDogs([...dogs, newDog]);\n  }\n\n  function arrayFilterByArray(input, criteria) {\n    const arr = input.filter(\n      function (f) {\n        return this.indexOf(f) < 0;\n      },\n      criteria.map(a => a.breed)\n    );\n    return arr;\n  }\n\n  var dogList = dogs.map(dog => (\n    <Dog\n      id={dog.breed}\n      breed={dog.breed}\n      key={dog.breed}\n      deleteDog={deleteDog} />\n  ));\n  return (\n    <div className=\"todoapp stack-large\">\n      <title>DogMatic</title>\n      <h1 className=\"dogmatic-title\">DogMatic</h1>\n      <DogSelect\n        masterDogList={masterDogList}\n        dogOptions={dogOptions}\n        addDog={addDog}\n        dogs={dogs} />\n      <div>\n        <RandomDog\n          dogs={dogs}\n          masterDogList={masterDogList}\n          addDog={addDog}\n          arrayFilterByArray={arrayFilterByArray}\n        />\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {dogList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\nvar DATA = [];\n\nReactDOM.render(\n    <App dogs={DATA}/>,\n  document.getElementById('main')\n);\n"],"sourceRoot":""}